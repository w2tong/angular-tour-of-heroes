{"version":3,"sources":["./src/app/hero-search/hero-search.component.ts","./src/app/hero-search/hero-search.component.html","./src/environments/environment.ts","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/in-memory-data.service.ts","./src/app/message.service.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/heroes/heroes.component.html","./src/app/heroes/heroes.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/hero-detail/hero-detail.component.html","./src/app/hero-detail/hero-detail.component.ts","./src/app/hero.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAInB;;;;;;ICDtB,qEAAyC;IACxC,uEAAoC;IACnC,uDACD;IAAA,4DAAI;IACL,4DAAK;;;IAHD,0DAAgC;IAAhC,8GAAgC;IAClC,0DACD;IADC,wFACD;;ADQI,MAAM,mBAAmB;IAI/B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAFpC,gBAAW,GAAG,IAAI,4CAAO,EAAU,CAAC;IAEI,CAAC;IAEjD,iDAAiD;IACjD,MAAM,CAAC,IAAY;QAClB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI;QACnC,8DAA8D;QAC9D,mEAAY,CAAC,GAAG,CAAC;QAEjB,2CAA2C;QAC3C,2EAAoB,EAAE;QAEtB,6DAA6D;QAC7D,gEAAS,CAAC,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAChE,CAAC;IACH,CAAC;;sFAtBW,mBAAmB;mGAAnB,mBAAmB;;QChBhC,yEAA2B;QAC1B,2EAAwB;QAAA,sEAAW;QAAA,4DAAQ;QAC3C,8EAAsE;QAApC,sRAAS,qBAAuB,IAAC;QAAnE,4DAAsE;QAEtE,wEAA0B;QACzB,6GAIK;;QACN,4DAAK;QACN,4DAAM;;QANiB,0DAAkB;QAAlB,iJAAkB;;;;;;;;;;;;;;ACLzC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;ICXlE,sEAAqD;IAAC,uDAAY;IAAA,4DAAM;;;IAAlB,0DAAY;IAAZ,sFAAY;;;;IAJnE,sEAA4C;IAE3C,qEAAI;IAAA,mEAAQ;IAAA,4DAAK;IACjB,4EAAuD;IAAjC,+RAAS,6BAAsB,IAAC;IAAC,yEAAc;IAAA,4DAAS;IAC9E,mHAAwE;IAEzE,4DAAM;;;IAFoB,0DAA0B;IAA1B,mGAA0B;;ACK7C,MAAM,iBAAiB;IAE7B,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAI,CAAC;IAEtD,QAAQ;IACR,CAAC;;kFALW,iBAAiB;iGAAjB,iBAAiB;QDT9B,6GAMM;;QANA,oGAAoC;;;;;;;;;;;;;;;;;;AEOnC,MAAM,mBAAmB;IAC/B,QAAQ;QACP,MAAM,MAAM,GAAG;YACd,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC3B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YACzB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;YAC5B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;YAC7B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;YAC3B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE;YAC7B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC1B,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YACzB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE;YACzB,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE;SAC3B,CAAC;QACF,OAAO,EAAE,MAAM,EAAE,CAAC;IACnB,CAAC;IAED,qEAAqE;IACrE,gCAAgC;IAChC,oDAAoD;IACpD,yEAAyE;IACzE,eAAe;IACf,KAAK,CAAC,MAAc;QACnB,OAAO,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC9E,CAAC;;sFAxBW,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB,mBAFnB,MAAM;;;;;;;;;;;;;;;;;ACAZ,MAAM,cAAc;IAH3B;QAIC,aAAQ,GAAa,EAAE,CAAC;KASxB;IAPA,GAAG,CAAC,OAAe;QAClB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7B,CAAC;IAED,KAAK;QACJ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACpB,CAAC;;4EATW,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFd,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ICDlB,uEAAgE;IAC/D,uDACD;IAAA,4DAAI;;;IAF2B,8GAAgC;IAC9D,0DACD;IADC,wFACD;;ACKM,MAAM,kBAAkB;IAG9B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAF5C,WAAM,GAAW,EAAE,CAAC;IAE4B,CAAC;IAEjD,QAAQ;QACP,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAED,SAAS;QACR,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;aAC1B,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzD,CAAC;;oFAZW,kBAAkB;kGAAlB,kBAAkB;QDT/B,qEAAI;QAAA,qEAAU;QAAA,4DAAK;QACnB,yEAAyB;QACxB,0GAEI;QACL,4DAAM;QAEN,6EAAmC;;QALd,0DAAS;QAAT,+EAAS;;;;;;;;;;;;;;;;;;;;;;;;;;IEW7B,qEAAgC;IAC/B,uEAAoC;IACnC,0EAAoB;IAAA,uDAAW;IAAA,4DAAO;IAAC,uDACxC;IAAA,4DAAI;IACJ,4EAAkE;IAAvB,sVAAsB;IAAC,4DAAC;IAAA,4DAAS;IAC7E,4DAAK;;;IAJD,0DAAgC;IAAhC,8GAAgC;IACd,0DAAW;IAAX,2EAAW;IAAQ,0DACxC;IADwC,wFACxC;;ACLK,MAAM,eAAe;IAG3B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;QACP,IAAI,CAAC,SAAS,EAAE,CAAC;IAClB,CAAC;IAED,SAAS;QACR,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE;aAC1B,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED,GAAG,CAAC,IAAY;QACf,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACnB,IAAI,CAAC,IAAI,EAAE;YAAE,OAAO;SAAE;QACtB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,IAAI,EAAU,CAAC;aACxC,SAAS,CAAC,IAAI,CAAC,EAAE;YACjB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,IAAU;QAChB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAClD,CAAC;;8EA1BW,eAAe;+FAAf,eAAe;;QDX5B,qEAAI;QAAA,oEAAS;QAAA,4DAAK;QAElB,sEAAK;QACJ,2EAAqB;QAAA,sEAAW;QAAA,4DAAQ;QACxC,yEAAkC;QAGlC,4EAA4E;QAAjD,4QAAS,kBAAmB,qBAAiB,EAAE,IAAC;QAC1E,qEACD;QAAA,4DAAS;QACV,4DAAM;QAEN,wEAAmB;QAClB,2GAKK;QACN,4DAAK;;QANiB,2DAAS;QAAT,+EAAS;;;;;;;;;;;;;;;;;;;;;;AENxB,MAAM,YAAY;IALzB;QAMC,UAAK,GAAG,gBAAgB,CAAC;KACzB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,qEAAI;QAAA,uDAAS;QAAA,4DAAK;QAClB,sEAAK;QACJ,uEAA2B;QAAA,oEAAS;QAAA,4DAAI;QACxC,uEAAwB;QAAA,iEAAM;QAAA,4DAAI;QACnC,4DAAM;QACN,2EAA+B;QAC/B,0EAA6B;;QANzB,0DAAS;QAAT,0EAAS;;;;;;;;;;;;;;ACCb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACb;AACW;AACmB;AACZ;AACP;AACT;AACa;AACc;AACR;AACG;AACK;;;AA0BnE,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFT,2DAAY;8FADb,EAAE,YAZJ;YACR,uEAAa;YACb,0DAAW;YACX,oEAAgB;YAChB,qEAAgB;YAChB,qEAAqE;YACrE,0CAA0C;YAC1C,6DAA6D;YAC7D,wFAA8B,CAAC,OAAO,CACrC,2EAAmB,EAAE,EAAE,iBAAiB,EAAE,KAAK,EAAE,CACjD;SACD;oIAIW,SAAS,mBAtBpB,2DAAY;QACZ,wEAAe;QACf,sFAAmB;QACnB,8EAAiB;QACjB,kFAAkB;QAClB,uFAAmB,aAGnB,uEAAa;QACb,0DAAW;QACX,oEAAgB;QAChB,qEAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;IC3BlB,sEAAkB;IAEjB,qEAAI;IAAA,uDAAiC;;IAAA,4DAAK;IAC1C,sEAAK;IAAA,uEAAM;IAAA,+DAAI;IAAA,4DAAO;IAAA,uDAAW;IAAA,4DAAM;IACvC,sEAAK;IACJ,2EAAuB;IAAA,uEAAW;IAAA,4DAAQ;IAC1C,4EAAiE;IAA3C,oVAAuB;IAA7C,4DAAiE;IAClE,4DAAM;IAEN,6EAAyB;IAAjB,mTAAgB;IAAC,gEAAI;IAAA,4DAAS;IAEvC,4DAAM;;;IATD,0DAAiC;IAAjC,mKAAiC;IACf,0DAAW;IAAX,+EAAW;IAGV,0DAAuB;IAAvB,qFAAuB;;ACMxC,MAAM,mBAAmB;IAI/B,YACS,KAAqB,EACrB,WAAwB,EACxB,QAAkB;QAFlB,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,aAAQ,GAAR,QAAQ,CAAU;IACvB,CAAC;IAEL,QAAQ;QACP,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB,CAAC;IAED,OAAO;QACN,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;aAC1B,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,MAAM;QACL,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACtB,CAAC;IAED,IAAI;QACH,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;aACpC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IAClC,CAAC;;sFA3BW,mBAAmB;mGAAnB,mBAAmB;QDZhC,gHAWM;QAEN,4EAA2B;QAAnB,2IAAS,YAAQ,IAAC;QAAC,kEAAO;QAAA,4DAAS;;QAbrC,0EAAU;;;;;;;;;;;;;;AEChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+D;AACzB;AACgB;;;;AAS/C,MAAM,WAAW;IAOvB,YACS,IAAgB,EAChB,cAA8B;QAD9B,SAAI,GAAJ,IAAI,CAAY;QAChB,mBAAc,GAAd,cAAc,CAAgB;QAP/B,cAAS,GAAG,YAAY,CAAC,CAAE,iBAAiB;QACpD,gBAAW,GAAG;YACb,OAAO,EAAE,IAAI,gEAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SAChE,CAAC;IAIyC,CAAC;IAE5C,iCAAiC;IACjC,SAAS;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,SAAS,CAAC;aAC1C,IAAI,CACJ,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,EACpC,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAS,WAAW,EAAE,EAAE,CAAC,CAAC,CACrD,CAAC;IACJ,CAAC;IAED,+CAA+C;IAC/C,OAAO,CAAC,EAAU;QACjB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,EAAE,CAAC;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,GAAG,CAAC,CAAC,IAAI,CACnC,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,EAC3C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,cAAc,EAAE,EAAE,CAAC,CAAC,CACtD,CAAC;IACH,CAAC;IAED,yCAAyC;IACzC,UAAU,CAAC,IAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAChE,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,EAChD,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAM,YAAY,CAAC,CAAC,CAC/C,CAAC;IACH,CAAC;IAED,yCAAyC;IACzC,OAAO,CAAC,IAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAO,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CACvE,0DAAG,CAAC,CAAC,OAAa,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAoB,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,EAClE,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,SAAS,CAAC,CAAC,CAC7C,CAAC;IACH,CAAC;IAED,8CAA8C;IAC9C,UAAU,CAAC,EAAU;QACpB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,IAAI,EAAE,EAAE,CAAC;QAEtC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAO,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CACxD,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,EAC3C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAO,YAAY,CAAC,CAAC,CAChD,CAAC;IACH,CAAC;IAED,gDAAgD;IAChD,YAAY,CAAC,IAAY;QACxB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE;YACjB,+CAA+C;YAC/C,OAAO,+CAAE,CAAC,EAAE,CAAC,CAAC;SACd;QACD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,IAAI,CAAC,SAAS,UAAU,IAAI,EAAE,CAAC,CAAC,IAAI,CACnE,0DAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAClB,IAAI,CAAC,GAAG,CAAC,0BAA0B,IAAI,GAAG,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,GAAG,CAAC,uBAAuB,IAAI,GAAG,CAAC,CAAC,EAC1C,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAS,cAAc,EAAE,EAAE,CAAC,CAAC,CACxD,CAAC;IACH,CAAC;IAED,wDAAwD;IAChD,GAAG,CAAC,OAAe;QAC1B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,gBAAgB,OAAO,EAAE,CAAC,CAAC;IACpD,CAAC;IAED;;;;;OAKG;IACK,WAAW,CAAI,SAAS,GAAG,WAAW,EAAE,MAAU;QACzD,OAAO,CAAC,KAAU,EAAiB,EAAE;YAEpC,wDAAwD;YACxD,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,yBAAyB;YAE/C,8DAA8D;YAC9D,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,YAAY,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;YAElD,yDAAyD;YACzD,OAAO,+CAAE,CAAC,MAAW,CAAC,CAAC;QACxB,CAAC,CAAC;IACH,CAAC;;sEA5FW,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFX,MAAM;;;;;;;;;;;;;ACTnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACK;AACc;AACL;;;AAErE,MAAM,MAAM,GAAW;IACtB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,MAAM,EAAE;IACzD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,sFAAmB,EAAE;IACtD,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iFAAkB,EAAE;CACpD,CAAC;AAMK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHnB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEV,gBAAgB,uFAFlB,4DAAY;;;;;;;;;;;;;;;;;;;ACfwB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport {\r\n\tdebounceTime, distinctUntilChanged, switchMap\r\n} from 'rxjs/operators';\r\n\r\nimport { Hero } from '../hero';\r\nimport { HeroService } from '../hero.service';\r\n\r\n@Component({\r\n\tselector: 'app-hero-search',\r\n\ttemplateUrl: './hero-search.component.html',\r\n\tstyleUrls: ['./hero-search.component.css']\r\n})\r\nexport class HeroSearchComponent implements OnInit {\r\n\theroes$!: Observable<Hero[]>;\r\n\tprivate searchTerms = new Subject<string>();\r\n\r\n\tconstructor(private heroService: HeroService) { }\r\n\r\n\t// Push a search term into the observable stream.\r\n\tsearch(term: string): void {\r\n\t\tthis.searchTerms.next(term);\r\n\t}\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.heroes$ = this.searchTerms.pipe(\r\n\t\t\t// wait 300ms after each keystroke before considering the term\r\n\t\t\tdebounceTime(300),\r\n\r\n\t\t\t// ignore new term if same as previous term\r\n\t\t\tdistinctUntilChanged(),\r\n\r\n\t\t\t// switch to new search observable each time the term changes\r\n\t\t\tswitchMap((term: string) => this.heroService.searchHeroes(term)),\r\n\t\t);\r\n\t}\r\n}","<div id=\"search-component\">\r\n\t<label for=\"search-box\">Hero Search</label>\r\n\t<input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\r\n\r\n\t<ul class=\"search-result\">\r\n\t\t<li *ngFor=\"let hero of heroes$ | async\">\r\n\t\t\t<a routerLink=\"/detail/{{hero.id}}\">\r\n\t\t\t\t{{hero.name}}\r\n\t\t\t</a>\r\n\t\t</li>\r\n\t</ul>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div *ngIf=\"messageService.messages.length\">\r\n\r\n\t<h2>Messages</h2>\r\n\t<button class=\"clear\" (click)=\"messageService.clear()\">Clear messages</button>\r\n\t<div *ngFor='let message of messageService.messages'> {{message}} </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { MessageService } from '../message.service';\r\n\r\n@Component({\r\n\tselector: 'app-messages',\r\n\ttemplateUrl: './messages.component.html',\r\n\tstyleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n\tconstructor(public messageService: MessageService) { }\r\n\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\r\nimport { Hero } from './hero';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class InMemoryDataService implements InMemoryDbService {\r\n\tcreateDb() {\r\n\t\tconst heroes = [\r\n\t\t\t{ id: 11, name: 'Dr Nice' },\r\n\t\t\t{ id: 12, name: 'Narco' },\r\n\t\t\t{ id: 13, name: 'Bombasto' },\r\n\t\t\t{ id: 14, name: 'Celeritas' },\r\n\t\t\t{ id: 15, name: 'Magneta' },\r\n\t\t\t{ id: 16, name: 'RubberMan' },\r\n\t\t\t{ id: 17, name: 'Dynama' },\r\n\t\t\t{ id: 18, name: 'Dr IQ' },\r\n\t\t\t{ id: 19, name: 'Magma' },\r\n\t\t\t{ id: 20, name: 'Tornado' }\r\n\t\t];\r\n\t\treturn { heroes };\r\n\t}\r\n\r\n\t// Overrides the genId method to ensure that a hero always has an id.\r\n\t// If the heroes array is empty,\r\n\t// the method below returns the initial number (11).\r\n\t// if the heroes array is not empty, the method below returns the highest\r\n\t// hero id + 1.\r\n\tgenId(heroes: Hero[]): number {\r\n\t\treturn heroes.length > 0 ? Math.max(...heroes.map(hero => hero.id)) + 1 : 11;\r\n\t}\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class MessageService {\r\n\tmessages: string[] = [];\r\n\r\n\tadd(message: string) {\r\n\t\tthis.messages.push(message);\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.messages = [];\r\n\t}\r\n}","<h2>Top Heroes</h2>\r\n<div class=\"heroes-menu\">\r\n\t<a *ngFor=\"let hero of heroes\" routerLink=\"/detail/{{hero.id}}\">\r\n\t\t{{hero.name}}\r\n\t</a>\r\n</div>\r\n\r\n<app-hero-search></app-hero-search>","import { Component, OnInit } from '@angular/core';\r\nimport { Hero } from '../hero';\r\nimport { HeroService } from '../hero.service';\r\n\r\n@Component({\r\n\tselector: 'app-dashboard',\r\n\ttemplateUrl: './dashboard.component.html',\r\n\tstyleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\theroes: Hero[] = [];\r\n\r\n\tconstructor(private heroService: HeroService) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.getHeroes();\r\n\t}\r\n\r\n\tgetHeroes(): void {\r\n\t\tthis.heroService.getHeroes()\r\n\t\t\t.subscribe(heroes => this.heroes = heroes.slice(1, 5));\r\n\t}\r\n}","<h2>My Heroes</h2>\r\n\r\n<div>\r\n\t<label id=\"new-hero\">Hero name: </label>\r\n\t<input for=\"new-hero\" #heroName />\r\n\r\n\t<!-- (click) passes input value to add() and then clears the input -->\r\n\t<button class=\"add-button\" (click)=\"add(heroName.value); heroName.value=''\">\r\n\t\tAdd hero\r\n\t</button>\r\n</div>\r\n\r\n<ul class=\"heroes\">\r\n\t<li *ngFor=\"let hero of heroes\">\r\n\t\t<a routerLink=\"/detail/{{hero.id}}\">\r\n\t\t\t<span class=\"badge\">{{hero.id}}</span> {{hero.name}}\r\n\t\t</a>\r\n\t\t<button class=\"delete\" title=\"delete hero\" (click)=\"delete(hero)\">x</button>\r\n\t</li>\r\n</ul>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Hero } from '../hero';\r\nimport { HeroService } from '../hero.service';\r\nimport { MessageService } from '../message.service';\r\n\r\n@Component({\r\n\tselector: 'app-heroes',\r\n\ttemplateUrl: './heroes.component.html',\r\n\tstyleUrls: ['./heroes.component.css']\r\n})\r\nexport class HeroesComponent implements OnInit {\r\n\theroes!: Hero[];\r\n\r\n\tconstructor(private heroService: HeroService) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.getHeroes();\r\n\t}\r\n\r\n\tgetHeroes(): void {\r\n\t\tthis.heroService.getHeroes()\r\n\t\t\t.subscribe(heroes => this.heroes = heroes);\r\n\t}\r\n\r\n\tadd(name: string): void {\r\n\t\tname = name.trim();\r\n\t\tif (!name) { return; }\r\n\t\tthis.heroService.addHero({ name } as Hero)\r\n\t\t\t.subscribe(hero => {\r\n\t\t\t\tthis.heroes.push(hero);\r\n\t\t\t});\r\n\t}\r\n\r\n\tdelete(hero: Hero): void {\r\n\t\tthis.heroes = this.heroes.filter(h => h !== hero);\r\n\t\tthis.heroService.deleteHero(hero.id).subscribe();\r\n\t}\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n\tselector: 'app-root',\r\n\ttemplateUrl: './app.component.html',\r\n\tstyleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\ttitle = 'Tour of Heroes';\r\n}\r\n","<h1>{{title}}</h1>\r\n<nav>\r\n\t<a routerLink=\"/dashboard\">Dashboard</a>\r\n\t<a routerLink=\"/heroes\">Heroes</a>\r\n</nav>\r\n<router-outlet></router-outlet>\r\n<app-messages></app-messages>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\r\nimport { InMemoryDataService } from './in-memory-data.service';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeroesComponent } from './heroes/heroes.component';\r\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HeroSearchComponent } from './hero-search/hero-search.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [\r\n\t\tAppComponent,\r\n\t\tHeroesComponent,\r\n\t\tHeroDetailComponent,\r\n\t\tMessagesComponent,\r\n\t\tDashboardComponent,\r\n  HeroSearchComponent\r\n\t],\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tFormsModule,\r\n\t\tAppRoutingModule,\r\n\t\tHttpClientModule,\r\n\t\t// The HttpClientInMemoryWebApiModule module intercepts HTTP requests\r\n\t\t// and returns simulated server responses.\r\n\t\t// Remove it when a real server is ready to receive requests.\r\n\t\tHttpClientInMemoryWebApiModule.forRoot(\r\n\t\t\tInMemoryDataService, { dataEncapsulation: false }\r\n\t\t)\r\n\t],\r\n\tproviders: [],\r\n\tbootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<div *ngIf=\"hero\">\r\n\r\n\t<h2>{{hero.name | uppercase}} Details</h2>\r\n\t<div><span>id: </span>{{hero.id}}</div>\r\n\t<div>\r\n\t\t<label for=\"hero-name\">Hero name: </label>\r\n\t\t<input id=\"hero-name\" [(ngModel)]=\"hero.name\" placeholder=\"name\">\r\n\t</div>\r\n\r\n\t<button (click)=\"save()\">save</button>\r\n\r\n</div>\r\n\r\n<button (click)=\"goBack()\">go back</button>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { HeroService } from '../hero.service';\r\nimport { Hero } from '../hero';\r\n\r\n@Component({\r\n\tselector: 'app-hero-detail',\r\n\ttemplateUrl: './hero-detail.component.html',\r\n\tstyleUrls: ['./hero-detail.component.css']\r\n})\r\nexport class HeroDetailComponent implements OnInit {\r\n\r\n\thero!: Hero;\r\n\r\n\tconstructor(\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate heroService: HeroService,\r\n\t\tprivate location: Location\r\n\t) { }\r\n\r\n\tngOnInit(): void {\r\n\t\tthis.getHero();\r\n\t}\r\n\r\n\tgetHero(): void {\r\n\t\tconst id = Number(this.route.snapshot.paramMap.get('id'));\r\n\t\tthis.heroService.getHero(id)\r\n\t\t\t.subscribe(hero => this.hero = hero);\r\n\t}\r\n\r\n\tgoBack(): void {\r\n\t\tthis.location.back();\r\n\t}\r\n\r\n\tsave(): void {\r\n\t\tthis.heroService.updateHero(this.hero)\r\n\t\t\t.subscribe(() => this.goBack());\r\n\t}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Hero } from './hero';\r\nimport { HEROES } from './mock-heroes';\r\nimport { MessageService } from './message.service';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root'\r\n})\r\nexport class HeroService {\r\n\r\n\tprivate heroesUrl = 'api/heroes';  // URL to web api\r\n\thttpOptions = {\r\n\t\theaders: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n\t};\r\n\r\n\tconstructor(\r\n\t\tprivate http: HttpClient,\r\n\t\tprivate messageService: MessageService) { }\r\n\r\n\t/** GET heroes from the server */\r\n\tgetHeroes(): Observable<Hero[]> {\r\n\t\treturn this.http.get<Hero[]>(this.heroesUrl)\r\n\t\t\t.pipe(\r\n\t\t\t\ttap(_ => this.log('fetched heroes')),\r\n\t\t\t\tcatchError(this.handleError<Hero[]>('getHeroes', []))\r\n\t\t\t);\r\n\t}\r\n\r\n\t/** GET hero by id. Will 404 if id not found */\r\n\tgetHero(id: number): Observable<Hero> {\r\n\t\tconst url = `${this.heroesUrl}/${id}`;\r\n\t\treturn this.http.get<Hero>(url).pipe(\r\n\t\t\ttap(_ => this.log(`fetched hero id=${id}`)),\r\n\t\t\tcatchError(this.handleError<Hero>(`getHero id=${id}`))\r\n\t\t);\r\n\t}\r\n\r\n\t/** PUT: update the hero on the server */\r\n\tupdateHero(hero: Hero): Observable<any> {\r\n\t\treturn this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(`updated hero id=${hero.id}`)),\r\n\t\t\tcatchError(this.handleError<any>('updateHero'))\r\n\t\t);\r\n\t}\r\n\r\n\t/** POST: add a new hero to the server */\r\n\taddHero(hero: Hero): Observable<Hero> {\r\n\t\treturn this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\r\n\t\t\ttap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\r\n\t\t\tcatchError(this.handleError<Hero>('addHero'))\r\n\t\t);\r\n\t}\r\n\r\n\t/** DELETE: delete the hero from the server */\r\n\tdeleteHero(id: number): Observable<Hero> {\r\n\t\tconst url = `${this.heroesUrl}/${id}`;\r\n\r\n\t\treturn this.http.delete<Hero>(url, this.httpOptions).pipe(\r\n\t\t\ttap(_ => this.log(`deleted hero id=${id}`)),\r\n\t\t\tcatchError(this.handleError<Hero>('deleteHero'))\r\n\t\t);\r\n\t}\r\n\r\n\t/* GET heroes whose name contains search term */\r\n\tsearchHeroes(term: string): Observable<Hero[]> {\r\n\t\tif (!term.trim()) {\r\n\t\t\t// if not search term, return empty hero array.\r\n\t\t\treturn of([]);\r\n\t\t}\r\n\t\treturn this.http.get<Hero[]>(`${this.heroesUrl}/?name=${term}`).pipe(\r\n\t\t\ttap(x => x.length ?\r\n\t\t\t\tthis.log(`found heroes matching \"${term}\"`) :\r\n\t\t\t\tthis.log(`no heroes matching \"${term}\"`)),\r\n\t\t\tcatchError(this.handleError<Hero[]>('searchHeroes', []))\r\n\t\t);\r\n\t}\r\n\r\n\t/** Log a HeroService message with the MessageService */\r\n\tprivate log(message: string) {\r\n\t\tthis.messageService.add(`HeroService: ${message}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Handle Http operation that failed.\r\n\t * Let the app continue.\r\n\t * @param operation - name of the operation that failed\r\n\t * @param result - optional value to return as the observable result\r\n\t */\r\n\tprivate handleError<T>(operation = 'operation', result?: T) {\r\n\t\treturn (error: any): Observable<T> => {\r\n\r\n\t\t\t// TODO: send the error to remote logging infrastructure\r\n\t\t\tconsole.error(error); // log to console instead\r\n\r\n\t\t\t// TODO: better job of transforming error for user consumption\r\n\t\t\tthis.log(`${operation} failed: ${error.message}`);\r\n\r\n\t\t\t// Let the app keep running by returning an empty result.\r\n\t\t\treturn of(result as T);\r\n\t\t};\r\n\t}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HeroesComponent } from './heroes/heroes.component';\r\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n\t{ path: '', redirectTo: '/dashboard', pathMatch: 'full' },\r\n\t{ path: 'heroes', component: HeroesComponent },\r\n\t{ path: 'detail/:id', component: HeroDetailComponent },\r\n\t{ path: 'dashboard', component: DashboardComponent },\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}